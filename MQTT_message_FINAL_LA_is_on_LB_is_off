/*
*/
//#include <ESP8266WiFi.h>   commented
#include <WiFi.h>  //new
#include <PubSubClient.h>
int const LED12 = 12;
int const LED13 = 13;
int const LED14 = 14;
int const LED32 = 32;
int const LED33 = 33;
int n = 0;


//int BUILTIN_LED = 12; //new
//int BUILTIN_LED = 13;  //new
//int BUILTIN_LED = 14; //new
//int BUILTIN_LED = 32; //new
//int BUILTIN_LED = 33; //new
// Update these with values suitable for your network.
const char* ssid = "NETGEAR98";                                                      
//const char* ssid = "ITEK 2nd";
const char* password = "quickink024";                                         
//const char* password = "Four_Sprints_F21v";
const char* mqtt_server = "broker.emqx.io";
const char* inTopic = "eaaa/e21a/test/5LED";
//const char* ssid = "Waoo4920_S3N3";
//const char* password = "pcty7937";
//const char* mqtt_server = "test.mosquitto.org";
WiFiClient espClient;
PubSubClient client(espClient);
long lastMsg = 0;
char msg[50];
int value = 0;
void setup_wifi() {
delay(10);
// We start by connecting to a WiFi network
Serial.println();
Serial.print("Connecting to ");
Serial.println(ssid);
WiFi.begin(ssid, password);
while (WiFi.status() != WL_CONNECTED) {
delay(500);
Serial.print(".");
}
randomSeed(micros());
Serial.println("");
Serial.println("WiFi connected");
Serial.println("IP address: ");
Serial.println(WiFi.localIP());
}
void callback(char* topic, byte* payload, unsigned int length) {
Serial.print("Message arrived [");
Serial.print(topic);
Serial.print("] ");

for(int i = 0; i<=6 ; i++){
    if ((char)payload[0] == 'L'){
      if((char)payload[1] == 'A'){
        if((char)payload[i] == '1'){
          digitalWrite(LED12, HIGH);
        }
        if((char)payload[i] == '2'){
          digitalWrite(LED13, HIGH);
        }
        if((char)payload[i] == '3'){
          digitalWrite(LED14, HIGH);
        }
        if((char)payload[i] == '4'){
          digitalWrite(LED32, HIGH);
        }
        if((char)payload[i] == '5'){
          digitalWrite(LED33, HIGH);
        }
      }
      if((char)payload[1] == 'B'){
        if((char)payload[i] == '1'){
          digitalWrite(LED12, LOW);
        }
        if((char)payload[i] == '2'){
          digitalWrite(LED13, LOW);
        }
        if((char)payload[i] == '3'){
          digitalWrite(LED14, LOW);
        }
        if((char)payload[i] == '4'){
          digitalWrite(LED32, LOW);
        }
        if((char)payload[i] == '5'){
          digitalWrite(LED33, LOW);
        }
      }

    }
  }
  memset(payload, 0, 10);
  
//for (int n = 0; n < length; n = n++) {
//Serial.print((char)payload[n]);
//}

 // if((char)payload[0] == 'L'){
//    if((char)payload[1] == 'A'){
//      if((char)payload[2] == '1'){
//        digitalWrite(LED12, HIGH);
 //     }
//      if((char)payload[2] == '2'){
 //       digitalWrite(LED13, HIGH);
 //     }
 //     if((char)payload[2] == '3'){
//        digitalWrite(LED14, HIGH);
 //     }
 //     if((char)payload[2] == '4'){
 //       digitalWrite(LED32, HIGH);
 //     }
 //     if((char)payload[2] == '5'){
    //    digitalWrite(LED33, HIGH);
  //    }
 //     if((char)payload[3] == '1'){
 //       digitalWrite(LED12, HIGH);
 //     }
 //     if((char)payload[3] == '2'){
 //       digitalWrite(LED13, HIGH);
  //    }
 //     if((char)payload[3] == '3'){
 //       digitalWrite(LED14, HIGH);
 //     }
 //     if((char)payload[3] == '4'){
 //       digitalWrite(LED32, HIGH);
  //    }
  //    if((char)payload[3] == '5'){
  //      digitalWrite(LED33, HIGH);
  //    }
  //    if((char)payload[4] == '1'){
  //      digitalWrite(LED12, HIGH);
   //   }
   //   if((char)payload[4] == '2'){
   //     digitalWrite(LED13, HIGH);
      }
   //   if((char)payload[4] == '3'){
   //     digitalWrite(LED14, HIGH);
   //   }
   //   if((char)payload[4] == '4'){
   //     digitalWrite(LED32, HIGH);
   //   }
   //   if((char)payload[4] == '5'){
   //     digitalWrite(LED33, HIGH);
   //   }
    //  if((char)payload[5] == '1'){
    //    digitalWrite(LED12, HIGH);
   //   }
   //   if((char)payload[5] == '2'){
    //    digitalWrite(LED13, HIGH);
    //  }
     // if((char)payload[5] == '3'){
     //   digitalWrite(LED14, HIGH);
    //  }
    //  if((char)payload[5] == '4'){
    //    digitalWrite(LED32, HIGH);
   //   }
   //   if((char)payload[5] == '5'){
   //     digitalWrite(LED33, HIGH);
   //   }
   //   if((char)payload[6] == '1'){
    //    digitalWrite(LED12, HIGH);
   //   }
   //   if((char)payload[6] == '2'){
   //     digitalWrite(LED13, HIGH);
   //   }
   //   if((char)payload[6] == '3'){
    //    digitalWrite(LED14, HIGH);
   //   }
   //   if((char)payload[6] == '4'){
    //    digitalWrite(LED32, HIGH);
    //  }
    //  if((char)payload[6] == '5'){
   //     digitalWrite(LED33, HIGH);
    //  }
   // }
   // if((char)payload[1] == 'B'){
  //    if((char)payload[2] == '1'){
  //      digitalWrite(LED12, LOW);
   //   }
//      if((char)payload[2] == '2'){
//        digitalWrite(LED13, LOW);
//      }
//      if((char)payload[2] == '3'){
//        digitalWrite(LED14, LOW);
//      }
//      if((char)payload[2] == '4'){
//        digitalWrite(LED32, LOW);
//      }
//      if((char)payload[2] == '5'){
//        digitalWrite(LED33, LOW);
//      }
//      if((char)payload[3] == '1'){
//        digitalWrite(LED12, LOW);
//      }
//      if((char)payload[3] == '2'){
//        digitalWrite(LED13, LOW);
//      }
//      if((char)payload[3] == '3'){
//        digitalWrite(LED14, LOW);
//      }
//      if((char)payload[3] == '4'){
//        digitalWrite(LED32, LOW);
//      }
//      if((char)payload[3] == '5'){
//        digitalWrite(LED33, LOW);
//      }
//      if((char)payload[4] == '1'){
//        digitalWrite(LED12, LOW);
//      }
//      if((char)payload[4] == '2'){
//        digitalWrite(LED13, LOW);
//      }
//      if((char)payload[4] == '3'){
//        digitalWrite(LED14, LOW);
//      }
//      if((char)payload[4] == '4'){
//        digitalWrite(LED32, LOW);
//      }
//      if((char)payload[4] == '5'){
//        digitalWrite(LED33, LOW);
//      }
//      if((char)payload[5] == '1'){
//        digitalWrite(LED12, LOW);
//      }
//      if((char)payload[5] == '2'){
//        digitalWrite(LED13, LOW);
//      }
//      if((char)payload[5] == '3'){
//        digitalWrite(LED14, LOW);
//      }
//      if((char)payload[5] == '4'){
//        digitalWrite(LED32, LOW);
//      }
//      if((char)payload[5] == '5'){
//        digitalWrite(LED33, LOW);
//      }
//      if((char)payload[6] == '1'){
//        digitalWrite(LED12, LOW);
//      }
//      if((char)payload[6] == '2'){
//        digitalWrite(LED13, LOW);
//      }
//      if((char)payload[6] == '3'){
//        digitalWrite(LED14, LOW);
//      }
//      if((char)payload[6] == '4'){
//        digitalWrite(LED32, LOW);
//      }
//      if((char)payload[6] == '5'){
//        digitalWrite(LED33, LOW);
//      }
//}

void reconnect() {
// Loop until we're reconnected
while (!client.connected()) {
Serial.print("Attempting MQTT connection...");
// Create a random client ID
String clientId = "ESP8266Client-";
clientId += String(random(0xffff), HEX);
// Attempt to connect
if (client.connect(clientId.c_str())) {
Serial.println("connected");
// Once connected, publish an announcement...
client.publish("outTopic", "hello world");
// ... and resubscribe
client.subscribe(inTopic);
} else {
Serial.print("failed, rc=");
Serial.print(client.state());
Serial.println(" try again in 5 seconds");
// Wait 5 seconds before retrying
delay(5000);
}
}
}
void setup() {
Serial.begin(115200);
setup_wifi();
client.setServer(mqtt_server, 1883);
client.setCallback(callback);
pinMode(12, OUTPUT);
pinMode(13, OUTPUT);
pinMode(14, OUTPUT);
pinMode(32, OUTPUT);
pinMode(33, OUTPUT);
}
void loop() {
if (!client.connected()) {
reconnect();
}
long now = millis();
client.loop();
if (millis() - now > 7)
{
Serial.print("duration of  mqtt.loop()  is  : milisec  ->");
Serial.println(millis() - now);
}
now = millis();
if (now - lastMsg > 20000) {
lastMsg = now;
++value;
snprintf (msg, 50, "hello world #%ld", value);
Serial.print("Publish message: ");
Serial.println(msg);
client.publish("outTopic", msg);
}
}
